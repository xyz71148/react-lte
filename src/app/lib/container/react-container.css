/**
 * Fill Container
 * 1. on its own - fill available vertical space
 * 2. as a child - flex to fill vertical space
 */
.Container--fill {
  height: 100%;
}
.Container--fill > .Container--fill {
  -webkit-flex: 1 1 0;
  -ms-flex: 1 1 0;
  flex: 1 1 0;
  position: relative;
}
/**
 * Container Layout
 * 1. create a flexible layout, either `column` or `row`
 * 2. flex-column elements collapse horizontally, so we stretch them out again
 */
.Container--direction-column,
.Container--direction-row {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-height: 100%;
  width: 100%;
}
.Container--direction-column > .ViewManager,
.Container--direction-row > .ViewManager,
.Container--direction-column > .Container--fill,
.Container--direction-row > .Container--fill {
  -webkit-flex: 1 1 0;
  -ms-flex: 1 1 0;
  flex: 1 1 0;
  position: relative;
}
.Container--direction-column {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}
.Container--direction-row {
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}
.Container--direction-row > .Container--fill {
  height: auto;
  width: auto;
}
.Container--align-end {
  -webkit-align-items: flex-end;
  align-items: flex-end;
}
.Container--align-center {
  -webkit-align-items: center;
  align-items: center;
}
.Container--direction-column > .Container--align-center {
  text-align: center;
}
.Container--align-start {
  -webkit-align-items: flex-start;
  align-items: flex-start;
}
.Container--justified {
  -webkit-justify-content: space-around;
  justify-content: space-around;
}
.Container--justify-end {
  -webkit-justify-content: flex-end;
  justify-content: flex-end;
}
.Container--justify-center {
  -webkit-justify-content: center;
  justify-content: center;
}
.Container--justify-start {
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
}
.Container--scrollable {
  max-height: 100%;
  overflow: scroll;
  position: relative;
  -webkit-overflow-scrolling: touch;
}
.Container--scrollable:before,
.Container--scrollable:after {
  content: "";
  height: 1px;
  position: absolute;
  width: 1px;
}
.Container--scrollable:before {
  bottom: -1px;
}
.Container--scrollable:after {
  top: -1px;
}
#react-container {
  /**
	 * 1. fill available vertical space without resorting to "height: 100%", which
	 *    yields undesirable results
	 * 2. relatively positioned so ".NewView" descendents will fill correctly
	 */
}
#react-container .display-flex {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}
#react-container .Container--grow {
  -webkit-flex: 1 1 0;
  -ms-flex: 1 1 0;
  flex: 1 1 0;
  position: relative;
}
